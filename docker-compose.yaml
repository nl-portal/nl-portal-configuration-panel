services:
    configuration-panel-router:
        container_name: configuration-panel-router
        image: nginx:stable-alpine-slim
        profiles:
            - local
            - remote
        ports:
            - "3001:8080"
        volumes:
            - "./imports/router/conf.d/:/etc/nginx/conf.d/"
            - "./imports/router/templates/:/etc/nginx/templates/"
        environment:
            CONFIG_PANEL_BACKEND_HOST: http://host.docker.internal:8090
            CONFIG_PANEL_FRONTEND_HOST: http://host.docker.internal:8091

    configuration-panel-backend-local:
        profiles:
            - local
        container_name: configuration-panel-backend
        build: backend/
        depends_on:
            - configuration-panel-database
        ports:
            - "8090:8080"
        environment: &configuration-panel-backend-env
            LOGLEVEL: "INFO"
            DATABASE_URL: "jdbc:postgresql://configuration-panel-database:5432/nl-portal-config"
            DATABASE_USERNAME: "config"
            DATABASE_PASSWORD: "password"
            JWKS_URI: "http://host.docker.internal:8082/auth/realms/nlportalconfig/protocol/openid-connect/certs"
            CONFIG_CACHE_TTL: "30000"
            CONFIG_SERVER_PREFIX: "/configuration"
            CONFIG_SERVER_TOKEN: "VerySecretToken"
            CONFIG_NOTIFY_ENABLED: true
            CONFIG_NOTIFY_LIST: "http://host.docker.internal:8080"

    configuration-panel-frontend-local:
        profiles:
            - local
        container_name: configuration-panel-frontend
        build: frontend/
        depends_on:
            - configuration-panel-backend-local
        ports:
            - "8091:8080"
        environment: &configuration-panel-frontend-env
            OIDC_URL: "http://localhost:8082/auth/realms/nlportalconfig"
            OIDC_REALM: "nlportalconfig"
            OIDC_CLIENT_ID: "nl-portal-config"
            OIDC_REDIRECT_URI: "http://localhost:3001"
            OIDC_POST_LOGOUT_REDIRECT_URI: "http://localhost:3001"
            CLIENT_APPLICATION_NAME: "nl-portal-app"
            CONFIG_PANEL_REST_API_URL: "http://localhost:8090/api"

    configuration-panel-backend-remote:
        image: ghcr.io/nl-portal/configuration-panel-backend
        platform: linux/amd64
        profiles:
            - remote
        container_name: configuration-panel-backend
        depends_on:
            - configuration-panel-database
        ports:
            - "8090:8080"
        environment: *configuration-panel-backend-env

    configuration-panel-frontend-remote:
        image: ghcr.io/nl-portal/configuration-panel-frontend
        platform: linux/amd64
        profiles:
            - remote
        container_name: configuration-panel-frontend
        depends_on:
            - configuration-panel-backend-remote
        ports:
            - "8091:8080"
        environment: *configuration-panel-frontend-env

    configuration-panel-database:
        container_name: configuration-panel-database
        image: postgres:15
        environment:
            POSTGRES_USER: config
            POSTGRES_PASSWORD: password
            POSTGRES_DB: nl-portal-config
        ports:
            - "54322:5432"
        volumes:
            - configuration-panel-database-data:/var/lib/postgres # persist data even if container shuts down

    configuration-panel-keycloak:
        container_name: configuration-panel-keycloak
        depends_on:
            - configuration-panel-keycloak-database
        image: quay.io/keycloak/keycloak:26.3
        ports:
            - "8082:8080"
        environment:
            KC_DB: postgres
            KC_DB_URL: jdbc:postgresql://configuration-panel-keycloak-database/keycloak
            KC_DB_USERNAME: keycloak
            KC_DB_PASSWORD: keycloak
            KC_HTTP_RELATIVE_PATH: /auth
        volumes:
            - ./imports/keycloak:/opt/keycloak/data/import
        command: "start-dev --import-realm"

    configuration-panel-keycloak-database:
        container_name: configuration-panel-keycloak-database
        image: postgres:15
        environment:
            POSTGRES_USER: keycloak
            POSTGRES_PASSWORD: keycloak
volumes:
    configuration-panel-database-data:
